version: '3.9'

services:
  icecast:
    image: ghcr.io/anux-linux/kulturtelefon-stream/icecast2
    restart: unless-stopped
    volumes:
      - /etc/stream-api/docker/icecast/mounts:/etc/icecast2/mounts
      - /etc/stream-api/docker/logs/icecast:/var/log/icecast2
    environment:
      - ICECAST_USER=source
      - ICECAST_PASSWORD=hackme
      - ICECAST_ADMIN_PASSWORD=hackme
      - ICECAST_RELAY_PASSWORD=hackme
    networks:
      - icecast-net
  
  stream-api:
    image: ghcr.io/anux-linux/kulturtelefon-stream/stream-api
    restart: unless-stopped
    volumes:
      - /etc/stream-api/docker/config/stream.config:/app/config/stream.config
      - /etc/stream-api/docker/data/stream-api:/app/data
      - /etc/stream-api/docker/logs/stream-api:/var/log/stream-api
      - /etc/stream-api/docker/icecast/mounts:/app/icecast/mounts
    environment:
      - STREAM_API_PORT=8080
      - CONFIG_PATH=/app/config/stream.config
      - LOG_LEVEL=info
    networks:
      - icecast-net
  
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/stream-api/docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/stream-api/docker/nginx/conf.d:/etc/nginx/conf.d
      - /etc/stream-api/docker/certbot/www:/var/www/certbot
      - /etc/stream-api/docker/certbot/certs:/etc/nginx/ssl
      - /etc/stream-api/docker/logs/nginx:/var/log/nginx
    networks:
      - icecast-net

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - /etc/stream-api/docker/certbot/www:/var/www/certbot
      - /etc/stream-api/docker/certbot/certs:/etc/letsencrypt
      - /etc/stream-api/docker/logs/certbot/letsencrypt:/var/log/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - icecast-net
  
  stream-api-logger:
    image: alpine
    restart: unless-stopped
    volumes:
      - /etc/stream-api/docker/logs/stream-api:/var/logs/stream-api
    command: |
      /bin/sh -c "mkdir -p /var/logs/stream-api && 
                  tail -f /proc/1/fd/1 > /var/logs/stream-api/application.log"
    pid: "service:stream-api"

  log-rotator:
    image: alpine
    restart: unless-stopped
    volumes:
    - /etc/stream-api/docker/logs:/logs
    command: |
      /bin/sh -c "
      apk add --no-cache logrotate &&
      cat > /etc/logrotate.conf << 'EOF'
      /logs/nginx/*.log {
        rotate 7
        daily
        compress
        missingok
        notifempty
        create 644 root root
        postrotate
          /bin/kill -USR1 \$(cat /var/run/nginx.pid 2>/dev/null) 2>/dev/null || true
        endscript
      }

      /logs/icecast/*.log {
        rotate 7
        daily
        compress
        missingok
        notifempty
        create 644 root root
      }

      /logs/stream-api/*.log {
        rotate 7
        daily
        compress
        missingok
        notifempty
        create 644 root root
      }

      /logs/certbot/*.log {
        rotate 7
        daily
        compress
        missingok
        notifempty
        create 644 root root
      }
      EOF
      while true; do
        logrotate /etc/logrotate.conf
        sleep 86400
      done
      "

networks:
  icecast-net:
    driver: bridge