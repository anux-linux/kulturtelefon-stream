version: '3.9'

services:
  icecast:
    image: ghcr.io/anux-linux/kulturtelefon-stream/icecast2
    restart: unless-stopped
    volumes:
      - ./docker/icecast/mounts:/etc/icecast2/mounts
      - ./docker/logs/icecast:/var/log/icecast2
      - ./docker/data/icecast:/var/lib/icecast2
    environment:
      - ICECAST_USER=source
      - ICECAST_PASSWORD=hackme
      - ICECAST_ADMIN_PASSWORD=hackme
      - ICECAST_RELAY_PASSWORD=hackme
    networks:
      - icecast-net
  
  stream-api:
    image: ghcr.io/anux-linux/kulturtelefon-stream/stream-api
    restart: unless-stopped
    volumes:
      - ./docker/config/stream.config:/app/config/stream.config
      - ./docker/data/stream-api:/app/data
      - ./docker/logs/stream-api:/var/log/stream-api
      - ./docker/icecast/mounts:/app/icecast/mounts
    environment:
      - STREAM_API_PORT=8080
      - CONFIG_PATH=/app/config/stream.config
      - LOG_LEVEL=info
    networks:
      - icecast-net
  
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/certbot/www:/var/www/certbot
      - ./docker/certbot/certs:/etc/nginx/ssl
      - ./docker/logs/nginx:/var/log/nginx
    depends_on:
      - icecast
      - stream-api
    networks:
      - icecast-net

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./docker/certbot/www:/var/www/certbot
      - ./docker/certbot/certs:/etc/letsencrypt
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - icecast-net
  
  stream-api-logger:
    image: alpine
    restart: unless-stopped
    volumes:
      - ./docker/logs/stream-api:/var/logs/stream-api
    depends_on:
      - stream-api
    command: |
      /bin/sh -c "mkdir -p /var/logs/stream-api && 
                  tail -f /proc/1/fd/1 > /var/logs/stream-api/application.log"
    pid: "service:stream-api"

  log-rotator:
    image: alpine
    restart: unless-stopped
    volumes:
      - ./docker/logs:/logs
    command: |
      /bin/sh -c "apk add --no-cache logrotate && 
                  echo '/logs/*/*.log {\n  rotate 7\n  daily\n  compress\n  missingok\n  notifempty\n  create 644 root root\n}' > /etc/logrotate.conf && 
                  while true; do logrotate /etc/logrotate.conf; sleep 86400; done"

networks:
  icecast-net:
    driver: bridge