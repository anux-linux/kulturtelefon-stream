name: Build and Release Binary

on:
  push:
    tags:
      - 'v*' # Trigger on tags that start with 'v' (like v1.0.0)

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.actor }}/kulturtelefon-stream/stream-api

jobs:
    test:
        name: Run Tests
        runs-on: ubuntu-latest
        
        steps:
        - name: Checkout code
          uses: actions/checkout@v3
            
        - name: Set up Go
          uses: actions/setup-go@v4
          with:
            go-version: '1.24.1' # Use the Go version you need

        - name: Run tests
          run: |
            cd src
            go mod tidy
            go test -v ./...         
    build:
        needs: [test]
        name: Build and Release
        runs-on: ubuntu-latest
        
        steps:
        - name: Checkout code
          uses: actions/checkout@v3
        
        - name: Set up Go
          uses: actions/setup-go@v4
          with:
            go-version: '1.24.1' # Use the Go version you need
        
        - name: Build for Linux (amd64)
          run: |
            mkdir -p releases
            cd src
            go mod tidy
            GOOS=linux GOARCH=amd64 go build -o ../releases/kulturtelefon-stream-linux-amd64
        
        - name: Build for Linux (arm64)
          run: |
            cd src
            GOOS=linux GOARCH=arm64 go build -o ../releases/kulturtelefon-stream-linux-arm64
    release:
        needs: [test, build]
        runs-on: ubuntu-latest
    
        steps:
        - name: Create Release
          id: create_release
          uses: softprops/action-gh-release@v1
          with:
            files: |
                releases/kulturtelefon-stream-linux-amd64
                releases/kulturtelefon-stream-linux-arm64
            draft: false
            prerelease: false
            generate_release_notes: true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    release-image:
      needs: [test, build]
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
        attestations: write
        id-token: write
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Log in to the Container registry
          uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
          with:
              images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        - name: Build and push Docker image
          id: push
          uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
          with:
            context: docker/
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
        - name: Generate artifact attestation
          uses: actions/attest-build-provenance@v2
          with:
            subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
            subject-digest: ${{ steps.push.outputs.digest }}
            push-to-registry: true